server:
  port: 8084

spring:
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    consumer:
      group-id: ${SPRING_KAFKA_CONSUMER_GROUP:order-service}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: com.example.common.events.PaymentProcessedEvent


  cassandra:
    contact-points: ${CASSANDRA_CONTACT_POINTS:cassandra}
    keyspace-name: ${CASSANDRA_KEYSPACE:orders}
    port: ${CASSANDRA_PORT:9042}
    local-datacenter: ${CASSANDRA_LOCAL_DC:datacenter1}
    schema-action: create_if_not_exists

clients:
  item:
    url: ${ITEM_SERVICE_URL:http://item-service:8080}

topics:
  order-created: ${TOPIC_ORDER_CREATED:orders.order.created}
  payment-processed: ${TOPIC_PAYMENT_PROCESSED:payments.payment.processed}

jwt:
  secret: ${JWT_SECRET}

feign:
  httpclient.enabled: true
  okhttp.enabled: false
