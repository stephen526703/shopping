services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports: ["2181:2181"]

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092

  mysql:
    image: mysql:8.0.42
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: root
    ports: ["3307:3306"]
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d

  mongodb:
    image: mongo:7
    ports: ["27018:27017"]
    volumes:
      - mongo_data:/data/db

  cassandra:
    image: cassandra:5
    environment:
      CASSANDRA_CLUSTER_NAME: "Test Cluster"
      CASSANDRA_SEEDS: cassandra
      CASSANDRA_NUM_TOKENS: 16
      MAX_HEAP_SIZE: 768M
      HEAP_NEWSIZE: 256M
    ports: [ "9042:9042" ]
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: [ "CMD-SHELL", "cqlsh -e 'SHOW VERSION' || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 40
      start_period: 90s


  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: auth-runtime
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/authdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    depends_on: [ mysql ]
    ports: [ "8081:8080" ]

  account-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: account-runtime
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/accountdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: 8080
      AUTH_SERVICE_URL: http://auth-service:8081
    depends_on: [ mysql, auth-service ]
    ports: ["8082:8080"]

  item-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: item-runtime
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/${MONGO_DB}
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: 8080
    depends_on: [ mongodb ]
    ports: ["8083:8080"]

  order-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: order-runtime
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BROKER}
      CASSANDRA_CONTACT_POINTS: cassandra
      CASSANDRA_KEYSPACE: ${CASSANDRA_KEYSPACE}
      ITEM_SERVICE_URL: http://item-service:8083
      ACCOUNT_SERVICE_URL: http://account-service:8082
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: 8080
    depends_on: [ kafka, cassandra, item-service, account-service ]
    ports: ["8084:8080"]

  payment-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: payment-runtime
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BROKER}
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/payments?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SERVER_PORT: 8080
    depends_on: [ kafka, mysql ]
    ports: ["8085:8080"]

volumes:
  mysql_data:
  mongo_data:
  cassandra_data:
